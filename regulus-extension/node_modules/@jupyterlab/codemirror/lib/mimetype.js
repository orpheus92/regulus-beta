"use strict";
// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
Object.defineProperty(exports, "__esModule", { value: true });
var coreutils_1 = require("@jupyterlab/coreutils");
var _1 = require(".");
/**
 * The mime type service for CodeMirror.
 */
var CodeMirrorMimeTypeService = (function () {
    function CodeMirrorMimeTypeService() {
    }
    /**
     * Returns a mime type for the given language info.
     *
     * #### Notes
     * If a mime type cannot be found returns the defaul mime type `text/plain`, never `null`.
     */
    CodeMirrorMimeTypeService.prototype.getMimeTypeByLanguage = function (info) {
        var ext = info.file_extension || '';
        return _1.Mode.findBest(info.codemirror_mode || {
            mimetype: info.mimetype,
            name: info.name,
            ext: [ext.split('.').slice(-1)[0]]
        }).mime;
    };
    /**
     * Returns a mime type for the given file path.
     *
     * #### Notes
     * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.
     */
    CodeMirrorMimeTypeService.prototype.getMimeTypeByFilePath = function (path) {
        if (coreutils_1.PathExt.extname(path) === '.ipy') {
            return 'text/x-python';
        }
        var mode = _1.Mode.findByFileName(path) || _1.Mode.findBest('');
        return mode.mime;
    };
    return CodeMirrorMimeTypeService;
}());
exports.CodeMirrorMimeTypeService = CodeMirrorMimeTypeService;
