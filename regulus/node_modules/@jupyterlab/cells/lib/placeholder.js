"use strict";
/*-----------------------------------------------------------------------------
| Copyright (c) Jupyter Development Team.
| Distributed under the terms of the Modified BSD License.
|----------------------------------------------------------------------------*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var virtualdom_1 = require("@phosphor/virtualdom");
var apputils_1 = require("@jupyterlab/apputils");
/**
 * The CSS class added to placeholders.
 */
var PLACEHOLDER_CLASS = 'jp-Placeholder';
/**
 * The CSS classes added to input placeholder prompts.
 */
var INPUT_PROMPT_CLASS = 'jp-Placeholder-prompt jp-InputPrompt';
/**
 * The CSS classes added to output placeholder prompts.
 */
var OUTPUT_PROMPT_CLASS = 'jp-Placeholder-prompt jp-OutputPrompt';
/**
 * The CSS class added to placeholder content.
 */
var CONTENT_CLASS = 'jp-Placeholder-content';
/**
 * The CSS class added to input placeholders.
 */
var INPUT_PLACEHOLDER_CLASS = 'jp-InputPlaceholder';
/**
 * The CSS class added to output placeholders.
 */
var OUTPUT_PLACEHOLDER_CLASS = 'jp-OutputPlaceholder';
/**
 * An abstract base class for placeholders
 *
 * ### Notes
 * A placeholder is the element that is shown when input/output
 * is hidden.
 */
var Placeholder = (function (_super) {
    __extends(Placeholder, _super);
    /**
     * Construct a new placeholder.
     */
    function Placeholder(callback) {
        var _this = _super.call(this) || this;
        _this.addClass(PLACEHOLDER_CLASS);
        _this._callback = callback;
        return _this;
    }
    /**
     * Handle the click event.
     */
    Placeholder.prototype.handleClick = function (e) {
        var callback = this._callback;
        callback(e);
    };
    return Placeholder;
}(apputils_1.VDomRenderer));
exports.Placeholder = Placeholder;
/**
 * The input placeholder class.
 */
var InputPlaceholder = (function (_super) {
    __extends(InputPlaceholder, _super);
    /**
     * Construct a new input placeholder.
     */
    function InputPlaceholder(callback) {
        var _this = _super.call(this, callback) || this;
        _this.addClass(INPUT_PLACEHOLDER_CLASS);
        return _this;
    }
    /**
     * Render the input placeholder using the virtual DOM.
     */
    InputPlaceholder.prototype.render = function () {
        var _this = this;
        return [
            virtualdom_1.h("div", { className: INPUT_PROMPT_CLASS }),
            virtualdom_1.h("div", { className: CONTENT_CLASS, onclick: function (e) { return _this.handleClick(e); } },
                virtualdom_1.h("div", { className: "jp-MoreHorizIcon" }))
        ];
    };
    return InputPlaceholder;
}(Placeholder));
exports.InputPlaceholder = InputPlaceholder;
/**
 * The output placeholder class.
 */
var OutputPlaceholder = (function (_super) {
    __extends(OutputPlaceholder, _super);
    /**
     * Construct a new output placeholder.
     */
    function OutputPlaceholder(callback) {
        var _this = _super.call(this, callback) || this;
        _this.addClass(OUTPUT_PLACEHOLDER_CLASS);
        return _this;
    }
    /**
     * Render the output placeholder using the virtual DOM.
     */
    OutputPlaceholder.prototype.render = function () {
        var _this = this;
        return [
            virtualdom_1.h("div", { className: OUTPUT_PROMPT_CLASS }),
            virtualdom_1.h("div", { className: CONTENT_CLASS, onclick: function (e) { return _this.handleClick(e); } },
                virtualdom_1.h("div", { className: "jp-MoreHorizIcon" }))
        ];
    };
    return OutputPlaceholder;
}(Placeholder));
exports.OutputPlaceholder = OutputPlaceholder;
